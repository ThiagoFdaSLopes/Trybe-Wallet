{"ast":null,"code":"// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { SET_USER } from '../actions';\nconst INITIAL_STATE = {\n  user: {\n    email: '' // string que armazena o email da pessoa usuária\n\n  },\n  isFetching: false\n};\n\nconst reducerUser = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER:\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducerUser;","map":{"version":3,"names":["SET_USER","INITIAL_STATE","user","email","isFetching","reducerUser","state","action","type"],"sources":["/home/thiago/Documentos/projetoTrybe/sd-024-a-project-trybewallet/src/redux/reducers/user.js"],"sourcesContent":["// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { SET_USER } from '../actions';\n\nconst INITIAL_STATE = {\n  user: {\n    email: '', // string que armazena o email da pessoa usuária\n  },\n  isFetching: false,\n};\n\nconst reducerUser = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SET_USER:\n    return { ...state };\n  default:\n    return state;\n  }\n};\n\nexport default reducerUser;\n"],"mappings":"AAAA;AACA,SAASA,QAAT,QAAyB,YAAzB;AAEA,MAAMC,aAAa,GAAG;EACpBC,IAAI,EAAE;IACJC,KAAK,EAAE,EADH,CACO;;EADP,CADc;EAIpBC,UAAU,EAAE;AAJQ,CAAtB;;AAOA,MAAMC,WAAW,GAAG,YAAmC;EAAA,IAAlCC,KAAkC,uEAA1BL,aAA0B;EAAA,IAAXM,MAAW;;EACrD,QAAQA,MAAM,CAACC,IAAf;IACA,KAAKR,QAAL;MACE,OAAO,EAAE,GAAGM;MAAL,CAAP;;IACF;MACE,OAAOA,KAAP;EAJF;AAMD,CAPD;;AASA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}