{"ast":null,"code":"// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\n// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { SET_WALLET, REQUESTING, API_RESPONSE, SAVE_EXTENSE } from '../actions';\nconst INITIAL_STATE = {\n  isFetching: false,\n  currencies: [],\n  // array de string\n  expenses: [],\n  // array de objetos, com cada objeto tendo as chaves id, value, currency, method, tag, description e exchangeRates\n  editor: false,\n  // valor booleano que indica de uma despesa está sendo editada\n  idToEdit: 0 // valor numérico que armazena o id da despesa que esta sendo editada\n\n};\n\nconst wallet = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_WALLET:\n      return { ...state\n      };\n\n    case REQUESTING:\n      return { ...state,\n        isFetching: true\n      };\n\n    case API_RESPONSE:\n      return { ...state,\n        currencies: action.payload\n      };\n\n    case SAVE_EXTENSE:\n      return { ...state,\n        exp\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default wallet;","map":{"version":3,"names":["SET_WALLET","REQUESTING","API_RESPONSE","SAVE_EXTENSE","INITIAL_STATE","isFetching","currencies","expenses","editor","idToEdit","wallet","state","action","type","payload","exp"],"sources":["/home/thiago/Documentos/projetoTrybe/sd-024-a-project-trybewallet/src/redux/reducers/wallet.js"],"sourcesContent":["// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\n// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { SET_WALLET, REQUESTING, API_RESPONSE, SAVE_EXTENSE } from '../actions';\n\nconst INITIAL_STATE = {\n  isFetching: false,\n  currencies: [], // array de string\n  expenses: [], // array de objetos, com cada objeto tendo as chaves id, value, currency, method, tag, description e exchangeRates\n  editor: false, // valor booleano que indica de uma despesa está sendo editada\n  idToEdit: 0, // valor numérico que armazena o id da despesa que esta sendo editada\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SET_WALLET:\n    return { ...state };\n\n  case REQUESTING:\n    return {\n      ...state, isFetching: true,\n    };\n  case API_RESPONSE:\n    return { ...state, currencies: action.payload };\n  case SAVE_EXTENSE:\n    return { ...state, exp}\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n"],"mappings":"AAAA;AACA;AACA,SAASA,UAAT,EAAqBC,UAArB,EAAiCC,YAAjC,EAA+CC,YAA/C,QAAmE,YAAnE;AAEA,MAAMC,aAAa,GAAG;EACpBC,UAAU,EAAE,KADQ;EAEpBC,UAAU,EAAE,EAFQ;EAEJ;EAChBC,QAAQ,EAAE,EAHU;EAGN;EACdC,MAAM,EAAE,KAJY;EAIL;EACfC,QAAQ,EAAE,CALU,CAKP;;AALO,CAAtB;;AAQA,MAAMC,MAAM,GAAG,YAAmC;EAAA,IAAlCC,KAAkC,uEAA1BP,aAA0B;EAAA,IAAXQ,MAAW;;EAChD,QAAQA,MAAM,CAACC,IAAf;IACA,KAAKb,UAAL;MACE,OAAO,EAAE,GAAGW;MAAL,CAAP;;IAEF,KAAKV,UAAL;MACE,OAAO,EACL,GAAGU,KADE;QACKN,UAAU,EAAE;MADjB,CAAP;;IAGF,KAAKH,YAAL;MACE,OAAO,EAAE,GAAGS,KAAL;QAAYL,UAAU,EAAEM,MAAM,CAACE;MAA/B,CAAP;;IACF,KAAKX,YAAL;MACE,OAAO,EAAE,GAAGQ,KAAL;QAAYI;MAAZ,CAAP;;IACF;MACE,OAAOJ,KAAP;EAbF;AAeD,CAhBD;;AAkBA,eAAeD,MAAf"},"metadata":{},"sourceType":"module"}