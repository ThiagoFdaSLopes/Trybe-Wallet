{"ast":null,"code":"// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\n// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { SET_WALLET } from '../actions';\nconst INITIAL_STATE = {\n  isFetching: false\n};\n\nconst reducerWallet = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_WALLET:\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducerWallet;","map":{"version":3,"names":["SET_WALLET","INITIAL_STATE","isFetching","reducerWallet","state","action","type"],"sources":["/home/thiago/Documentos/projetoTrybe/sd-024-a-project-trybewallet/src/redux/reducers/wallet.js"],"sourcesContent":["// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\n// Esse reducer será responsável por tratar as informações da pessoa usuária\n\nimport { SET_WALLET } from '../actions';\n\nconst INITIAL_STATE = {\n  isFetching: false,\n\n\n};\n\nconst reducerWallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SET_WALLET:\n    return { ...state };\n  default:\n    return state;\n  }\n};\n\nexport default reducerWallet;\n"],"mappings":"AAAA;AACA;AAEA,SAASA,UAAT,QAA2B,YAA3B;AAEA,MAAMC,aAAa,GAAG;EACpBC,UAAU,EAAE;AADQ,CAAtB;;AAMA,MAAMC,aAAa,GAAG,YAAmC;EAAA,IAAlCC,KAAkC,uEAA1BH,aAA0B;EAAA,IAAXI,MAAW;;EACvD,QAAQA,MAAM,CAACC,IAAf;IACA,KAAKN,UAAL;MACE,OAAO,EAAE,GAAGI;MAAL,CAAP;;IACF;MACE,OAAOA,KAAP;EAJF;AAMD,CAPD;;AASA,eAAeD,aAAf"},"metadata":{},"sourceType":"module"}