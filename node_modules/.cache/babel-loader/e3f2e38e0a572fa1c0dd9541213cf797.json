{"ast":null,"code":"// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { SET_USER } from '../actions';\nconst INITIAL_STATE = {\n  email: '' // string que armazena o email da pessoa usuária\n\n};\n\nconst user = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER:\n      return { ...state,\n        state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default user;","map":{"version":3,"names":["SET_USER","INITIAL_STATE","email","user","state","action","type"],"sources":["/home/thiago/Documentos/projetoTrybe/sd-024-a-project-trybewallet/src/redux/reducers/user.js"],"sourcesContent":["// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { SET_USER } from '../actions';\n\nconst INITIAL_STATE = {\n  email: '', // string que armazena o email da pessoa usuária\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SET_USER:\n    return { ...state, state};\n  default:\n    return state;\n  }\n};\n\nexport default user;\n"],"mappings":"AAAA;AACA,SAASA,QAAT,QAAyB,YAAzB;AAEA,MAAMC,aAAa,GAAG;EACpBC,KAAK,EAAE,EADa,CACT;;AADS,CAAtB;;AAIA,MAAMC,IAAI,GAAG,YAAmC;EAAA,IAAlCC,KAAkC,uEAA1BH,aAA0B;EAAA,IAAXI,MAAW;;EAC9C,QAAQA,MAAM,CAACC,IAAf;IACA,KAAKN,QAAL;MACE,OAAO,EAAE,GAAGI,KAAL;QAAYA;MAAZ,CAAP;;IACF;MACE,OAAOA,KAAP;EAJF;AAMD,CAPD;;AASA,eAAeD,IAAf"},"metadata":{},"sourceType":"module"}